<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <title>Person List</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        th {
            background-color: #f4f4f4;
            text-align: left;
        }
    </style>
</head>
<body>
    <h1>Person List</h1>

    <table>
        <thead>
            <tr>
                <!-- Dynamically generate table headers -->
                <th th:each="header : ${headers}" th:text="${header}">Header</th>
            </tr>
        </thead>
        <tbody>
            <!-- Dynamically generate table rows -->
            <tr th:each="person : ${persons}">
                <td th:each="header : ${headers}" th:text="${#fields.get(person, header)}">Value</td>
            </tr>
        </tbody>
    </table>
</body>
</html>



package com.example.demo.controller;

import com.example.demo.model.Person;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Controller
public class PersonController {

    @GetMapping("/persons")
    public String listPersons(Model model) {
        List<Person> persons = Arrays.asList(
                new Person("Alice", 30, "alice@example.com"),
                new Person("Bob", 25, "bob@example.com"),
                new Person("Charlie", 35, "charlie@example.com")
        );

        // Get the headers from the Person class fields
        List<String> headers = Arrays.stream(Person.class.getDeclaredFields())
                .map(Field::getName)
                .collect(Collectors.toList());

        // Map the headers to property names
        Map<String, String> headerMap = headers.stream()
                .collect(Collectors.toMap(header -> header, header -> header));

        model.addAttribute("persons", persons);
        model.addAttribute("headers", headers);
        model.addAttribute("headerMap", headerMap);
        return "person-list"; // Refers to src/main/resources/templates/person-list.html
    }
}


